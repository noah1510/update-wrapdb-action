name: 'Update Wrapdb action'
description: 'Update the wrapdb with a github release from a github action.'
inputs:
  source-repository:
    description: 'The repository that has a new release'
    required: true
  project-name:
    description: 'An override for the project name (default is the repo name)'
    required: false
    default: ''
  release-tag:
    description: 'The tag associated with the new release'
    required: true
  provides:
    description: 'The provides argument for the wrap file (separated by comma if multiple)'
    required: true
  push-repository:
    description: 'The repository where the changes are pushed to and the pr is opened from.'
    required: true
  push-email:
    description: 'The email used for the automatic commit in the push repository.'
    required: false
    default: 'github-action@users.noreply.github.com'
  github_token:
    description: 'The github token used to open the pr and push to the push repository.'
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install pipenv
      shell: bash
      run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
    - name: Install dependencies
      shell: bash
      run: |
        cd ${{ github.action_path }}
        pipenv install
    - name: Run the update script
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      run: |
        git config --global user.email "${{ inputs.push-email }}"
        git config --global user.name "GitHub Action"
        gh auth status
        gh auth setup-git
        cd ${{ github.action_path }}
        pipenv run python update_repo.py \
          --url "${{ inputs.source-repository }}" \
          --name "${{ inputs.project-name }}" \
          --tag "${{ inputs.release-tag }}" \
          --push-url "${{ inputs.push-repository }}" \
          --provides "${{ inputs.provides }}"
    - name: Run the sanity checks
      shell: bash
      run: |
        cd ${{ github.action_path }}/wrapdb
        python3 -m pip install meson ninja
        python3 tools/sanity_checks.py
